package Challenges.ProgrammingModel.binomialDistribution;import java.math.BigInteger;import java.util.Scanner;/** * Created by mauro on 19/01/2016. */public class BinomialFun {    private BigInteger iterations = BigInteger.ZERO;    protected BinomialFun(int N, int K) {        BigInteger[][] binomial = new BigInteger[++N +1][K +1];        for (int k = 1; k <= K; k++) binomial[0][k] = BigInteger.ZERO;        for (int n = 0; n <= N; n++) binomial[n][0] = BigInteger.ONE;        for (int n = 1; n <= N; n++)            for (int k = 1; k <= K; k++)                binomial[n][k] = binomial[n-1][k-1].add(binomial[n-1][k]);        for (int n = 0; n <= N; n++) {            for (int k = 0; k <= K; k++) {                iterations = iterations.add(binomial[n][k]);                System.out.print(binomial[n][k] + " ");            }            System.out.println();        }        for (int n = 0; n < N-1; n++) iterations = iterations.add(binomial[n][K]);        iterations = iterations.subtract(binomial[N-1][K]);    }    public BigInteger iterations() { return iterations;}    public static void main(String[] args) {        Scanner sc = new Scanner(System.in);        System.out.println("Enter N and K: ");        int N = sc.nextInt();        int K = sc.nextInt();        BinomialFun bf = new BinomialFun(N, K);        System.out.println("Number of iterations = " + bf.iterations());    }}